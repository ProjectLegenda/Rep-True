Pre-requisite:

    Install original python3.6.5+ from https://www.python.org
 
    NOTE:Please don't install anaconda or ipython for this tools because original python depend on variable PYTHONPATH when searching for user defined site packages 
    But others may not, but if you are familiar with all distribution of python, you can install other distribution and hack launch shell script yourself

    Install Standard site-package from PyPI and make sure whenever you launch python process and packages below are accessible and importable without changing sys.path explicitly 

    pandas
    jieba
    numpy
    pyhive
    sqlalchemy
    thrift
    Cython
    sklearn
    pymysql

    export PATH and let shell know where to find your python3 binary
    
    example: 
    export PATH=$PATH:/usr/local/bin
 

Installing project:

    tar -xf CAPA_MODEL.tar
    cd CAPA_MODEL 
    export CAPA_MODEL_HOME=`pwd`
  
Launching project: 
    
    There are 6 algorithms in this package and will overwrite 10 tables in hive, details is in last part of this document 

    Client can call algorithm the following way: 
 
        $CAPA_MODEL_HOME/bin/start.sh cal_pat_wechat_openid_4pe_bi
    
    NOTE:cal_pat_wechat_openid_5pe_bi is the name of algorithm and it will be passed to shell-script
    
   
Caveats: 
    Enviorment variable CAPA_MODEL_HOME must be set



Description for algorithm:

    For each name of algorithm, the tables it would overwrite and purpose is expressed in following way:

    algorithm_name-->tablename would be overwritten-->purpose of algorithm; 

    if '|' exists after a name ,then it says that this name could map to mutiple output tables and purpose. In practice, each time you call the shell script with a name of algorithm, the table(s) depend on it will be overwriten, so you don't have to call multiple times  


Details:

    cal_pat_wechat_openid_4pe_bi-->cal_pat_wechat_openid_4pe_bi_heatmap-->provide heatmap input for patient openid from wechat to bi&4pe system 
                               |-->cal_pat_wechat_openid_4pe_bi_chordmap-->provide chordmap input for patient openid from wechat to bi&4pe system 


    cal_hcp_wechat_web_docid_4pe-->cal_hcp_wechat_web_docid_4pe_heatmap-->provide heatmap input for hcp doctorid from wechat&web to 4pe system
                               |-->cal_hcp_wechat_web_docid_4pe_chordmap-->provide chordmap input for hcp doctorid from wechat&web to 4pe system

    
    cal_hcp_wechat_openid_bi-->cal_hcp_wechat_openid_bi_heatmap-->provide heatmap input for hcp openid from wechat to bi system 
                           |-->cal_hcp_wechat_openid_bi_chordmap-->provide chordmap input for hcp openid from wechat to bi system

    cal_hcp_web_docid_bi-->cal_hcp_web_docid_heatmap-->provide heatmap input for hcp doctorid from web to bi system
                       |-->cal_hcp_web_docid_chordmap-->provide chordmap input for hcp doctorid  from web to bi system 
    
    cal_pat_search_openid_stats-->cal_pat_search_openid_stats-->provide search keywords and original search terms for patient with openid
 
    cal_pat_callcenter_patid_stats-->cal_pat_callcenter_patid_stats-->provide call center mapped with categories at patient id level
